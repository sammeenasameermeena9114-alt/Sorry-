<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Heart Beat Animation</title>
  <style>
    :root{
      --heart:#ff2d55;         /* primary heart color */
      --heart-glow:#ff8fa3;    /* glow color */
      --bg1:#0f1020;           /* background gradient start */
      --bg2:#1b1c38;           /* background gradient end */
      --text:#e8e8f0;
    }

    * { box-sizing: border-box; }

    body{
      margin:0; height:100svh; display:grid; place-items:center;
      background: radial-gradient(1200px 800px at 70% 20%, var(--bg2), var(--bg1));
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
      color:var(--text);
      overflow:hidden;
    }

    .wrap{ display:grid; gap:24px; place-items:center; text-align:center; }

    .heart{
      position:relative;
      width:clamp(120px, 26vmin, 280px);
      aspect-ratio:1/1;
      transform: rotate(-45deg);
      animation: beat 1.1s ease-in-out infinite;
      filter: drop-shadow(0 0 12px color-mix(in oklab, var(--heart) 60%, var(--heart-glow) 40%))
              drop-shadow(0 0 32px color-mix(in oklab, var(--heart) 20%, white 5%));
    }

    /* Main square */
    .heart .core{
      position:absolute; inset:0; border-radius:16%;
      background: radial-gradient(60% 60% at 30% 30%, var(--heart-glow), var(--heart));
    }

    /* Left circle */
    .heart .core::before,
    .heart .core::after{
      content:""; position:absolute; width:100%; height:100%; border-radius:50%;
      background: inherit;
    }
    .heart .core::before{ left:0; top:-50%; }
    .heart .core::after{ left:50%; top:0; }

    @keyframes beat{
      0%, 100%{ transform: rotate(-45deg) scale(1); }
      25%{ transform: rotate(-45deg) scale(1.08); }
      50%{ transform: rotate(-45deg) scale(0.98); }
      75%{ transform: rotate(-45deg) scale(1.12); }
    }

    /* Floating mini hearts */
    .float{
      position:absolute;
      width:clamp(8px, 1.8vmin, 16px);
      aspect-ratio:1/1; pointer-events:none; opacity:0.9;
      transform:translate(-50%, -50%) rotate(-45deg);
      animation: floatUp linear forwards;
    }
    .float::before, .float::after{
      content:""; position:absolute; inset:0; border-radius:16%; background:var(--heart);
    }
    .float::before{ top:-50%; border-radius:50%; }
    .float::after{ left:50%; border-radius:50%; }

    @keyframes floatUp{
      0%{ transform: translate(-50%, -20%) rotate(-45deg) scale(0.9); opacity:1; }
      80%{ opacity:0.9; }
      100%{ transform: translate(-50%, -140vh) rotate(-45deg) scale(0.6); opacity:0; }
    }

    .hint{ opacity:0.8; font-size:0.95rem; letter-spacing:0.2px; }
    .controls{ display:flex; gap:10px; flex-wrap:wrap; justify-content:center; align-items:center; }
    .btn, input[type="color"]{
      border:none; border-radius:999px; padding:10px 14px; font-weight:600; cursor:pointer;
      background:#ffffff10; color:var(--text); backdrop-filter: blur(6px);
      box-shadow: 0 1px 0 #ffffff10 inset, 0 8px 30px #00000020; outline:none;
    }
    .btn:hover{ background:#ffffff14; }
    input[type="color"]{ padding:6px; height:42px; width:42px; }

    @media (prefers-reduced-motion: reduce){
      .heart{ animation:none; }
      .float{ animation-duration: 0.01ms; animation-iteration-count: 1; }
    }
  </style>
</head>
<body>
  <div class="wrap">
    <div class="heart" id="heart">
      <div class="core"></div>
    </div>

    <div class="controls">
      <button class="btn" id="toggle">Pause Beat</button>
      <label class="btn" style="display:inline-flex; gap:8px; align-items:center;">
        Color <input id="color" type="color" value="#ff2d55" aria-label="Pick heart color" />
      </label>
      <button class="btn" id="burst">Heart Burst</button>
    </div>

    <div class="hint">Click or tap anywhere to spawn tiny hearts. Drag for a trail âœ¨</div>
  </div>

  <script>
    const heart = document.getElementById('heart');
    const toggle = document.getElementById('toggle');
    const color = document.getElementById('color');
    const burst = document.getElementById('burst');

    let running = true;

    toggle.addEventListener('click', () => {
      running = !running;
      heart.style.animationPlayState = running ? 'running' : 'paused';
      toggle.textContent = running ? 'Pause Beat' : 'Resume Beat';
    });

    color.addEventListener('input', e => {
      const val = e.target.value;
      document.documentElement.style.setProperty('--heart', val);
      // auto-generate a soft glow from the chosen color
      document.documentElement.style.setProperty('--heart-glow', val + '88');
    });

    function makeFloatHeart(x, y, size = 1, life = 2600){
      const s = document.createElement('span');
      s.className = 'float';
      s.style.left = x + 'px';
      s.style.top  = y + 'px';
      s.style.scale = size;
      s.style.transform += ` rotate(${(Math.random()*20-10) - 45}deg)`;
      const dur = life + Math.random()*1000;
      s.style.animationDuration = dur + 'ms';
      s.style.filter = `drop-shadow(0 0 8px var(--heart))`;
      document.body.appendChild(s);
      setTimeout(() => s.remove(), dur);
    }

    let drawing = false;
    function spawn(e){
      const { clientX:x, clientY:y } = e.touches ? e.touches[0] : e;
      makeFloatHeart(x, y, 0.8 + Math.random()*0.8);
    }

    window.addEventListener('pointerdown', e => { drawing = true; spawn(e); });
    window.addEventListener('pointerup',   () => drawing = false);
    window.addEventListener('pointermove', e => { if(drawing) spawn(e); });

    burst.addEventListener('click', () => {
      const rect = heart.getBoundingClientRect();
      const cx = rect.left + rect.width/2;
      const cy = rect.top + rect.height/2;
      for(let i=0;i<40;i++){
        const angle = (Math.PI*2) * (i/40);
        const r = 40 + Math.random()*120;
        const x = cx + Math.cos(angle) * r;
        const y = cy + Math.sin(angle) * r;
        makeFloatHeart(x, y, 0.6 + Math.random()*0.8, 1800 + Math.random()*800);
      }
    });
  </script>
</body>
</html>
